{% block main %}
<script type="text/javascript">
    $(document).ready(function(){


    $.extend($.fn.dataTable.defaults, {
        "sDom": "<'row-fluid'<'col-md-6'f><'col-6'l>r>t<'row-fluid datatabe-footer'<'col-md-6'i><'col-md-6 datatable-pagination'p>>",
        "sPaginationType": "bootstrap",
        "bFilter": true,
        "bJQueryUI": true,
        "bAutoWidth": false
    });

    $.extend($.fn.dataTable.defaults.oLanguage, {
        "sLengthMenu": "Records per page: _MENU_",
        "sSearch": "Rechercher",
        "sProcessing": "Processing…",
        "sInfo": "Showing <strong>_START_-_END_</strong> of <strong>_TOTAL_</strong> entries",
        "sInfoEmpty": "Aucune donnée",
        "sEmptyTable": "Aucune donnée",
        "sInfoFiltered": "(filtered from _MAX_ total entries)"
    });

    $.extend($.fn.dataTable.defaults.oSearch, {
        "bCaseInsensitive": true,
        "sSearch": "",
        "bRegex": false,
        "bSmart": true
    });

    $.extend($.fn.DataTable.ext.oJUIClasses, {
        "sSortAsc": "",
        "sSortDesc": "",
        "sSortable": "",
        "sSortableAsc": "",
        "sSortableDesc": "",
        "sSortableNone": "",

        "sSortIcon": "icon-sorting",
        "sSortJUIWrapper": "sort-wrapper",
        "sSortJUI": "icon-sorting-both",
        "sSortJUIAsc": "icon-sorting-asc",
        "sSortJUIDesc": "icon-sorting-desc",
        "sSortJUIAscAllowed": "icon-sorting-asc-disabled",
        "sSortJUIDescAllowed": "icon-sorting-desc-disabled"
    });

    $.fn.dataTableExt.oApi.fnPagingInfo = function ( oSettings )
    {
        return {
            "iStart":         oSettings._iDisplayStart,
            "iEnd":           oSettings.fnDisplayEnd(),
            "iLength":        oSettings._iDisplayLength,
            "iTotal":         oSettings.fnRecordsTotal(),
            "iFilteredTotal": oSettings.fnRecordsDisplay(),
            "iPage":          Math.ceil( oSettings._iDisplayStart / oSettings._iDisplayLength ),
            "iTotalPages":    Math.ceil( oSettings.fnRecordsDisplay() / oSettings._iDisplayLength )
        };
    }


    /* Bootstrap style pagination control */
    $.extend($.fn.dataTableExt.oPagination, {
        "bootstrap": {
            "fnInit": function(oSettings, nPaging, fnDraw) {
                var oLang = oSettings.oLanguage.oPaginate;
                var fnClickHandler = function(e) {
                    e.preventDefault();
                    if(oSettings.oApi._fnPageChange(oSettings, e.data.action)) {
                        fnDraw(oSettings);
                    }
                };

                $(nPaging).addClass('pagination pagination-right').append('<ul class="pagination">' + '<li class="prev disabled"><a href="#"><i class="icon-paginate-previous"></i> <span>' + oLang.sPrevious + '</span></a></li>' + '<li class="next disabled"><a href="#"><span>' + oLang.sNext + '</span> <i class="icon-paginate-next"></i></a></li>' + '</ul>');
                var els = $('a', nPaging);
                $(els[0]).bind('click.DT', {
                    action: "previous"
                }, fnClickHandler);
                $(els[1]).bind('click.DT', {
                    action: "next"
                }, fnClickHandler);
            },

            "fnUpdate": function(oSettings, fnDraw) {
                var iListLength = 5;
                var oPaging = oSettings.oInstance.fnPagingInfo();
                var an = oSettings.aanFeatures.p;
                var i, j, sClass, iStart, iEnd, iHalf = Math.floor(iListLength / 2);

                if(oPaging.iTotalPages < iListLength) {
                    iStart = 1;
                    iEnd = oPaging.iTotalPages;
                } else if(oPaging.iPage <= iHalf) {
                    iStart = 1;
                    iEnd = iListLength;
                } else if(oPaging.iPage >= (oPaging.iTotalPages - iHalf)) {
                    iStart = oPaging.iTotalPages - iListLength + 1;
                    iEnd = oPaging.iTotalPages;
                } else {
                    iStart = oPaging.iPage - iHalf + 1;
                    iEnd = iStart + iListLength - 1;
                }

                for( i = 0, iLen = an.length; i < iLen; i++) {
                    // Remove the middle elements
                    $('li:gt(0)', an[i]).filter(':not(:last)').remove();

                    // Add the new list items and their event handlers
                    for( j = iStart; j <= iEnd; j++) {
                        sClass = (j == oPaging.iPage + 1) ? 'class="active"' : '';
                        $('<li ' + sClass + '><a href="#">' + j + '</a></li>').insertBefore($('li:last', an[i])[0]).bind('click', function(e) {
                            e.preventDefault();
                            oSettings._iDisplayStart = (parseInt($('a', this).text(), 10) - 1) * oPaging.iLength;
                            fnDraw(oSettings);
                        });
                    }

                    // Add / remove disabled classes from the static elements
                    if(oPaging.iPage === 0) {
                        $('li:first', an[i]).addClass('disabled');
                    } else {
                        $('li:first', an[i]).removeClass('disabled');
                    }

                    if(oPaging.iPage === oPaging.iTotalPages - 1 || oPaging.iTotalPages === 0) {
                        $('li:last', an[i]).addClass('disabled');
                    } else {
                        $('li:last', an[i]).removeClass('disabled');
                    }
                }
            }
        }
    });





        function getId() { return "{{id}}"; };
        function getWrapper() { return  "#{{id}}_wrapper"; };
        var s = getWrapper();
        var multiple = {% if multiple %} true {% else %} false {% endif %};
        var multiple_rawhtml = '';
        {% if multiple %}
            var multiple_rawhtml = '\
                    <label class="dataTables_multiple">\
                    <span style="margin:0 40px 0 0px;">\
                        Execute\
                        <select name="dataTables[select]">\
                            {% for key,item in multiple %}\
                            <option value="{{ path(item.route) }}">{{item.title}}</option>\
                            {% endfor %}\
                        </select>\
                        <button class="btn-datatable-multiple" >OK</button>\
                    <span>\
                    </label>';
        {% endif %}
        var $js_conf = {{ js_conf | raw }};
        var $js = {};
        for(key in $js_conf) { 
            if ($js_conf.hasOwnProperty(key)) {
                eval ( ' $js["'+key+'"] = ' + $js_conf[key]+ ' ; ' ); 
            }
        }
        var $options = {{ js | raw }};
        var $aoColumnDefs = new Array();
        {% if multiple %}
        $aoColumnDefs.push({ 'bSortable': false, 'aTargets': [ 0 ] });
        {% endif %}
        {% if action and not action_twig %} 
        $aoColumnDefs.push({
            "fnRender": function ( oObj ) {
                var $edit_url = strtr(
                    "{{ path(edit_route , { 'id': "xx" }) }}",
                    { "xx": oObj.aData[{{fields|length}}-1] }
                );
                var $link_edit = "<a  style='float:right; margin-right:10px' class='dialog' title='edit'";
                $link_edit += "href='"+$edit_url+"'>";
                $link_edit += "{{ 'ali.common.edit'|trans()}}</a>";
                var $delete_url = strtr(
                    "{{ path(delete_route, { 'id': "xx" }) }}",
                    { "xx": oObj.aData[{{fields|length}}-1] }
                );
                var $link_delete = "<form style='float:right' class='form' action='"+$delete_url+"' method='post'>";
                $link_delete += strtr(
                                    '{{ form_widget(delete_form) }}',
                                    { "_id_": oObj.aData[{{fields|length}}-1] }
                                );
                $link_delete += "<a class='button-delete' href='#' type='submit'>{{ 'ali.common.delete'|trans() }}</a>";
                $link_delete += " </form>";
                var $out = $link_delete+ " " + $link_edit ;
                if (oObj.aData[{{fields|length}}-1] == null )
                {
                    $out = "<div style='float:right'>{{ 'ali.common.no_action'|trans() }}</div>";
                }
                return $out
            },
            "aTargets": [ multiple ? {{fields|length}} : ({{fields|length}} -1)  ]
        });
        {% endif %} 
        var $defaults = {
            "bJQueryUI": true,
            "sPaginationType": "bootstrap",
            "aLengthMenu": [[5,10, 25, 50, -1], [5,10, 25, 50, "All"]],
            "iDisplayLength": 10,
            "bServerSide": true,
            "bProcessing": true,
            "sAjaxSource": null,
            "bPaginate": true,
            {% if sort %}
            "aaSorting": [[ {{sort[0]}}, "{{sort[1]}}" ]],
            {% endif %}
            "bLengthChange": true,
            "aoColumnDefs": $aoColumnDefs,
            "fnDrawCallback": function(oSettings) {
                var s = getWrapper();
                if( multiple && $('.dataTables_multiple',$(s)).length==0){
                    $(s+' .dataTables_length').prepend(multiple_rawhtml);
                }
            },
            "bSort": true,
            "bFilter": {% if search %} true {% else %} false {% endif %},
            "oLanguage": {
                "sProcessing":     '{{ 'ali.common.sProcessing' | trans() }}',
                "sLengthMenu":     '{{ 'ali.common.sLengthMenu' | trans() }}',
                "sZeroRecords":    '{{ 'ali.common.sZeroRecords' | trans() }}',
                "sInfo":           '{{ 'ali.common.sInfo' | trans() }}',
                "sInfoEmpty":      '{{ 'ali.common.sInfoEmpty' | trans() }}',
                "sInfoFiltered":   '{{ 'ali.common.sInfoFiltered' | trans() }}',
                "sInfoPostFix":    '{{ 'ali.common.sInfoPostFix' | trans() }}',
                "sSearch":         '{{ 'ali.common.sSearch' | trans() }}',
                "sLoadingRecords": '{{ 'ali.common.sLoadingRecords' | trans() }}',
                "sUrl":            "",
                /*"oPaginate": {
                    "sFirst":    '{{ 'ali.common.sFirst' | trans() }}',
                    "sPrevious": '{{ 'ali.common.sPrevious' | trans() }}',
                    "sNext":     '{{ 'ali.common.sNext' | trans() }}',
                    "sLast":     '{{ 'ali.common.sLast' | trans() }}'
                }*/
            },
            "bAutoWidth" : false
        };
        $.extend($defaults,$js);
        $.extend($defaults,$options);
        $('#{{id}}').trigger('datatables_init', $defaults );
        eval("var "+ "oTable_"+'{{id}}'.split('-').join('_') + "  = $('#{{id}}').dataTable($defaults)");
        $(s).on('click','.button-delete:parent',function(e){
            if (!confirm('{{ 'ali.common.confirm_delete'|trans()  }}')) {
                return false;
            }
            $(this).parents('form:eq(0)').submit();
        });

        if (multiple===true) { 
            var chbox =  'input:checkbox[name="dataTables[actions][]"]';
            var chbox_all = 'input:checkbox[name="datatable_action_all"]';
            $(s).on('click','.btn-datatable-multiple:not(.search_init)',function(e){
                if($('input:focus',$(s)).length > 0){
                    return false;
                }
                e.preventDefault();
                if($(chbox+':checked').length > 0){
                    if (!confirm('Are you sure ?')) {
                        return false;
                    }
                    var form = $(this).parents('form:eq(0)');
                    var action = $('select[name="dataTables[select]"]',$(s)).val();
                    $.ajax({
                        type: "POST",
                        url: action,
                        data: form.serialize(),
                        success: function(msg) {
                            $('#'+getId()).dataTable().fnDraw();
                            $.unblockpage();
                        },
                        beforeSend: function() {
                            $.blockpage({
                                msg: 'saving data'
                            });
                        }
                    });
                } else {
                    alert('You need to select at least one element.');
                }
            });
            $(s).on('click',chbox_all,function(e){
                if($(this).is(':checked')) {
                    $(chbox,$(s)).attr("checked",false).click();
                } else {
                    $(chbox,$(s)).attr("checked",true).click();
                }
            });
        }

        {% if search %}

            var searchOnce = function () {
                var oTable = eval('oTable_{{id}}'.split('-').join('_'));
                oTable.fnFilter( 
                    $('#search-field_{{id}}').val(), 
                    oTable.oApi._fnVisibleToColumnIndex( 
                        oTable.fnSettings()
                    ) 
                );
            }


            $(".dataTables_filter").remove();
            var search_selector = "#{{id}} input[searchable=true]";
            $(search_selector).keypress( function (event) {
                var index = $(this).attr('index');
                var oTable = eval('oTable_{{id}}'.split('-').join('_'));
                if (event.keyCode == '13') {
                    oTable.fnFilter( 
                        this.value, 
                        oTable.oApi._fnVisibleToColumnIndex( 
                            oTable.fnSettings(), 
                            index 
                        ) 
                    );
                }
            }).each( function (i) {
                this.initVal = this.value;
            }).focus( function () {
                if ( this.className == "search_init" ){
                    this.className = "";
                    this.value = "";
                }
            }).blur( function (i) {
                if ( this.value == "" ){
                    this.className = "search_init";
                    this.value = this.initVal;
                }
            });

            $("#start-search_{{id}}").click(function(){
                searchOnce();
            });

            $("#search-field_{{id}}").keypress( function (event) {
                if (event.keyCode == '13') {
                    searchOnce();
                }
            });

        {% endif %}
    });

</script>

{% if search and searchUnique %}

    <div class="pull-right col-xs-4 search-datatable-once">
        <div class="input-group">
            <input class="form-control" type="text" id="search-field_{{id}}">
            <span class="input-group-btn">
                <button class="btn btn-sm btn-default" type="button"  id="start-search_{{id}}">
                    <i class="icon-search nav-search-icon bigger-110"></i>
                    Rechercher
                </button>
            </span>
        </div>
    </div>

{% endif %}

{% if multiple %}
<form name="frm-{{id}}">
{% endif %}
    <table class="display table table-bordered" id="{{id}}"> 
        <thead> 
            <tr> 
            {% if multiple %}
                <th width="1%" ><input type="checkbox" name="datatable_action_all" /></th>
            {% endif %}
            
            {% set i = 0 %}
            {% for label,key in fields %}
                {% if label != '_identifier_' %}
                    {% if fieldsWidth[i] is defined %}
                        <th width="{{fieldsWidth[i]}}">{{ label }}</th>
                    {% else %}
                        <th>{{ label }}</th>
                    {% endif %}
                {% endif %}
                {% set i = i+1 %}
            {% endfor %}
            {% if action %}
                <th>{{ 'ali.common.action'|trans()  }}</th>
            {% endif %}
            </tr> 
        </thead>
        {% if search and not searchUnique %}
        {% set i = 0 %}
        <tfoot>
            <tr>
                {% if multiple %}
                <th></th>
                {% endif %}
                {% for label,key in fields %}
                    {% if label != '_identifier_' %}
                        {% if search_fields is not empty %}
                            {% if i in search_fields %}
                            <td><input index="{{i}}" searchable="true" type="text" placeholder="{{ 'ali.common.search'|trans() }}" class="search_init" /></td>
                            {% else %}
                            <td></td>
                            {% endif %}
                        {% else %}
                        <td><input index="{{i}}" searchable="true" type="text" placeholder="{{ 'ali.common.search'|trans() }}" class="search_init" /></td>
                        {% endif %}
                    {% elseif label == '_identifier_'and action and not action_twig %}
                        <td></td>
                    {% endif %}
                    {% set i = i+1 %}
                {% endfor %}
            </tr>
        </tfoot>
        {% endif %}
    </table>
{% if multiple %}
</form>
{% endif %}
{% endblock  %}
